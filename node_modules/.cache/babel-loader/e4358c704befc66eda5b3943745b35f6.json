{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\MesProjets\\\\msg\\\\src\\\\components\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport { collection, doc, getDoc, getDocs, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\"); // for the input\n\n  const [user, setUser] = useState(null); // the actual user\n\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    // we use firebase query \n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (error) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch(); // if enter just search for user\n  };\n\n  const handleSelect = async () => {\n    //create user chats \n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.id + currentUser.uid;\n\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId)); //if res doesn t exist \n\n      if (!res.exists()) {\n        // create a chat in chats collection \n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        }); // create user chats\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.id,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.id,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"find a user\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"cshUuZ2XHHKtfLBzRAJmY/PZ2Ck=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/MesProjets/msg/src/components/Search.jsx"],"names":["React","useContext","useState","collection","doc","getDoc","getDocs","query","serverTimestamp","setDoc","updateDoc","where","db","AuthContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","data","error","handleKey","e","code","handleSelect","combinedId","uid","id","res","exists","messages","displayName","photoURL","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,KAA3C,EAAkDC,eAAlD,EAAmEC,MAAnE,EAA2EC,SAA3E,EAAsFC,KAAtF,QAAmG,oBAAnG;AACA,SAAQC,EAAR,QAAiB,aAAjB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBd,QAAQ,CAAC,EAAD,CAAvC,CADmB,CAC2B;;AAC9C,QAAM,CAACe,IAAD,EAAMC,OAAN,IAAiBhB,QAAQ,CAAC,IAAD,CAA/B,CAFmB,CAEqB;;AACxC,QAAM,CAACiB,GAAD,EAAKC,MAAL,IAAelB,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAgBpB,UAAU,CAACY,WAAD,CAAhC;;AAGA,QAAMS,YAAY,GAAG,YAAY;AAEnC;AAEM,UAAMC,CAAC,GAAGhB,KAAK,CAACJ,UAAU,CAACS,EAAD,EAAI,OAAJ,CAAX,EACfD,KAAK,CAAE,aAAF,EAAgB,IAAhB,EAAqBI,QAArB,CADU,CAAf;;AAIN,QAAI;AACF,YAAMS,aAAa,GAAG,MAAMlB,OAAO,CAACiB,CAAD,CAAnC;AACAC,MAAAA,aAAa,CAACC,OAAd,CAAuBrB,GAAD,IAAS;AACjCc,QAAAA,OAAO,CAACd,GAAG,CAACsB,IAAJ,EAAD,CAAP;AAEC,OAHC;AAKD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,MAAAA,MAAM,CAAC,IAAD,CAAN;AAED;AAIE,GAtBD;;AA2BA,QAAMQ,SAAS,GAAIC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,IAAF,KAAU,OAAV,IAAqBR,YAAY,EAAjC,CADqB,CACgB;AACtC,GAFD;;AAIA,QAAMS,YAAY,GAAG,YAAW;AAG9B;AAEA,UAAMC,UAAU,GAAGX,WAAW,CAACY,GAAZ,GAAkBhB,IAAI,CAACgB,GAAvB,GACjBZ,WAAW,CAACY,GAAZ,GAAkBhB,IAAI,CAACgB,GADN,GAEjBhB,IAAI,CAACiB,EAAL,GAAQb,WAAW,CAACY,GAFtB;;AAIA,QAAI;AACF,YAAME,GAAG,GAAG,MAAM9B,MAAM,CAACD,GAAG,CAACQ,EAAD,EAAI,OAAJ,EAAYoB,UAAZ,CAAJ,CAAxB,CADE,CAER;;AACM,UAAI,CAACG,GAAG,CAACC,MAAJ,EAAL,EAAkB;AAEhB;AACA,cAAM3B,MAAM,CAACL,GAAG,CAACQ,EAAD,EAAI,OAAJ,EAAYoB,UAAZ,CAAJ,EAA4B;AAACK,UAAAA,QAAQ,EAAG;AAAZ,SAA5B,CAAZ,CAHgB,CAKhB;;AAED,cAAM3B,SAAS,CAACN,GAAG,CAACQ,EAAD,EAAI,WAAJ,EAAgBS,WAAW,CAACY,GAA5B,CAAJ,EAAqC;AACnD,WAACD,UAAU,GAAC,WAAZ,GACA;AACEC,YAAAA,GAAG,EAAChB,IAAI,CAACiB,EADX;AAEEI,YAAAA,WAAW,EAACrB,IAAI,CAACqB,WAFnB;AAGEC,YAAAA,QAAQ,EAACtB,IAAI,CAACsB;AAHhB,WAFmD;AAQnD,WAACP,UAAU,GAAC,OAAZ,GAAsBxB,eAAe;AARc,SAArC,CAAf;AAYA,cAAME,SAAS,CAACN,GAAG,CAACQ,EAAD,EAAI,WAAJ,EAAgBK,IAAI,CAACgB,GAArB,CAAJ,EAA8B;AAC5C,WAACD,UAAU,GAAC,WAAZ,GACA;AACEC,YAAAA,GAAG,EAACZ,WAAW,CAACa,EADlB;AAEEI,YAAAA,WAAW,EAACjB,WAAW,CAACiB,WAF1B;AAGEC,YAAAA,QAAQ,EAAClB,WAAW,CAACkB;AAHvB,WAF4C;AAQ5C,WAACP,UAAU,GAAC,OAAZ,GAAsBxB,eAAe;AARO,SAA9B,CAAf;AAYA;AAEF,KApCD,CAoCE,OAAOmB,KAAP,EAAc,CAEf;AAKF,GApDD;;AAwDA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,WAAW,EAAC,aAAhC;AAA8C,QAAA,SAAS,EAAEC,SAAzD;AACA,QAAA,QAAQ,EAAEC,CAAC,IAAIb,WAAW,CAACa,CAAC,CAACW,MAAF,CAASC,KAAV;AAD1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAMItB,GAAG,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANX,EAOKF,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEc,YAAnC;AAAA,8BACD;AAAK,QAAA,GAAG,EAAGd,IAAI,CAACsB;AAAhB;AAAA;AAAA;AAAA;AAAA,cADC,eAEL;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,oBAAOtB,IAAI,CAACqB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA;AAAA;AAAA;AAAA;AAAA,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnHD;;GAAMxB,M;;KAAAA,M;AAqHN,eAAeA,MAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport { collection, doc, getDoc, getDocs, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport {db} from \"../firebase\"\r\nimport {AuthContext} from \"../context/AuthContext\"\r\n\r\n\r\nconst Search = () => {\r\n  const [username,setUsername] = useState(\"\") ; // for the input\r\n  const [user,setUser] = useState(null) ; // the actual user\r\n  const [err,setErr] = useState(false) ;\r\n  const {currentUser} = useContext(AuthContext)\r\n  \r\n\r\n  const handleSearch = async () => {\r\n\r\n// we use firebase query \r\n\r\n      const q = query(collection(db,\"users\"),\r\n      where (\"displayName\",\"==\",username));\r\n\r\n\r\ntry {\r\n  const querySnapshot = await getDocs(q);\r\n  querySnapshot.forEach((doc) => {\r\nsetUser(doc.data())\r\n \r\n});\r\n  \r\n} catch (error) {\r\n  setErr(true)\r\n  \r\n}\r\n\r\n     \r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleKey = (e)=>{\r\n    e.code ===\"Enter\" && handleSearch(); // if enter just search for user\r\n  }\r\n\r\n  const handleSelect = async() => {\r\n\r\n\r\n    //create user chats \r\n\r\n    const combinedId = currentUser.uid > user.uid  \r\n    ? currentUser.uid + user.uid \r\n    : user.id+currentUser.uid;\r\n\r\n    try {\r\n      const res = await getDoc(doc(db,\"chats\",combinedId));\r\n//if res doesn t exist \r\n      if (!res.exists()){\r\n\r\n        // create a chat in chats collection \r\n        await setDoc(doc(db,\"chats\",combinedId),{messages : []});\r\n\r\n        // create user chats\r\n\r\n       await updateDoc(doc(db,\"userChats\",currentUser.uid),{\r\n        [combinedId+\".userInfo\"]:\r\n        {\r\n          uid:user.id,\r\n          displayName:user.displayName,\r\n          photoURL:user.photoURL\r\n\r\n        },\r\n        [combinedId+\".date\"]: serverTimestamp(),\r\n\r\n       });\r\n\r\n       await updateDoc(doc(db,\"userChats\",user.uid),{\r\n        [combinedId+\".userInfo\"]:\r\n        {\r\n          uid:currentUser.id,\r\n          displayName:currentUser.displayName,\r\n          photoURL:currentUser.photoURL\r\n\r\n        },\r\n        [combinedId+\".date\"]: serverTimestamp(),\r\n\r\n       });\r\n\r\n      } \r\n      \r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='search'>\r\n        <div className=\"searchForm\">\r\n            <input type=\"text\"  placeholder='find a user' onKeyDown={handleKey} \r\n            onChange={e => setUsername(e.target.value)}/>\r\n        </div>\r\n       \r\n       {err && <div>User not found</div>}\r\n       { user && <div className='userChat' onClick={handleSelect}>\r\n                <img src= {user.photoURL} />\r\n            <div className='userChatInfo'>\r\n                <span>{user.displayName}</span>\r\n            </div>\r\n\r\n\r\n        </div>}\r\n\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}