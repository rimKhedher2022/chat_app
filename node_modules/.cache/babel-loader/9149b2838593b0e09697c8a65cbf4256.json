{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\MesProjets\\\\msg\\\\src\\\\pages\\\\Login.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [err, setErr] = useState(false);\nconst navigate = useNavigate;\n\nconst handleSubmit = async e => {\n  e.preventDefault(); // do not refresh the page \n\n  const displayName = e.target[0].value;\n  const email = e.target[1].value;\n  const password = e.target[2].value;\n  const file = e.target[3].files[0];\n\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const storageRef = ref(storage, displayName);\n    const uploadTask = uploadBytesResumable(storageRef, file); // Register three observers:\n    // 1. 'state_changed' observer, called any time the state changes\n    // 2. Error observer, called on failure\n    // 3. Completion observer, called on successful completion\n\n    uploadTask.on(error => {\n      setErr(true);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        await updateProfile(res.user, {\n          displayName,\n          photoURL: downloadURL\n        });\n        await setDoc(doc(db, \"users\", res.user.uid), {\n          uid: res.user.uid,\n          displayName,\n          email,\n          photoURL: downloadURL\n        });\n        await setDoc(doc(db, \"userChats\", res.user.uid), {});\n        navigate(\"/\"); // after success of registration take me to home page \n      });\n    });\n  } catch (err) {\n    setErr(true);\n  }\n};\n\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo\",\n          children: \"Chat app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/MesProjets/msg/src/pages/Login.jsx"],"names":["React","err","setErr","useState","navigate","useNavigate","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","createUserWithEmailAndPassword","auth","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","error","getDownloadURL","snapshot","then","downloadURL","updateProfile","user","photoURL","setDoc","doc","db","uid","Login"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nconst [err, setErr] = useState(false) ; \r\n  const navigate = useNavigate\r\n\r\n  const handleSubmit = async(e) =>{\r\n\r\n   \r\n    e.preventDefault(); // do not refresh the page \r\n    const displayName = e.target[0].value;\r\n    const email = e.target[1].value;\r\n    const password = e.target[2].value;\r\n    const file = e.target[3].files[0];\r\n\r\n\r\n    try{\r\n      const res = await  createUserWithEmailAndPassword(auth, email, password)\r\n     \r\n\r\n\r\nconst storageRef = ref(storage, displayName);\r\n\r\nconst uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n// Register three observers:\r\n// 1. 'state_changed' observer, called any time the state changes\r\n// 2. Error observer, called on failure\r\n// 3. Completion observer, called on successful completion\r\nuploadTask.on(\r\n\r\n \r\n  (error) => {\r\n    setErr(true) ; \r\n   \r\n  }, \r\n  () => {\r\n   \r\n    getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n      await  updateProfile(res.user,{\r\n        displayName,\r\n        photoURL:downloadURL,\r\n\r\n\r\n      });\r\n\r\n      await setDoc(doc(db,\"users\" ,res.user.uid), {\r\n        uid:res.user.uid,\r\n        displayName,\r\n        email,\r\n        photoURL: downloadURL,\r\n    \r\n    })\r\n      await setDoc(doc(db,\"userChats\" ,res.user.uid), {})\r\n       navigate(\"/\") // after success of registration take me to home page \r\n    });\r\n  }\r\n);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    }catch (err){\r\n\r\n      setErr(true) ; \r\n\r\n    }\r\n\r\n \r\n\r\n  }\r\n\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <div className='formContainer'>\r\n\r\n        <div className='formWrapper'>\r\n          <span className='logo'>Chat app</span>\r\n          <span className='title'>Login</span>\r\n          <form>\r\n           \r\n            <input type=\"email\" placeholder='email'/>\r\n         \r\n\r\n            <input type=\"password\" placeholder='password'/>\r\n            \r\n\r\n            <button>log in</button>\r\n\r\n          </form>\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\n"]},"metadata":{},"sourceType":"module"}